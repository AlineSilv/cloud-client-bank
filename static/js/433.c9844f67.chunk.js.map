{"version":3,"file":"static/js/433.c9844f67.chunk.js","mappings":"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","sources":["pages/relatory/RelatoryEBSVolumes.tsx","pages/relatory/RelatoryStyles.ts"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  Container,\r\n  Table,\r\n  Thead,\r\n  Tr,\r\n  PaginationContainer,\r\n  PaginationButton,\r\n  TableWrapper,\r\n  Th,\r\n  Td\r\n} from \"./RelatoryStyles.ts\";\r\n\r\ninterface EBS {\r\n  Account: string;\r\n  Region: string;\r\n  VolumeID: string;\r\n  SizeGB: number;\r\n  State: string;\r\n  AttachedInstances: string[];\r\n}\r\n\r\ninterface RelatoryEBSVolumesProps {\r\n  data: EBS[];\r\n}\r\n\r\nconst RelatoryEBSVolumes: React.FC<RelatoryEBSVolumesProps> = ({ data }) => {\r\n  const itemsPerPage = 10;\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const indexOfLastItem = currentPage * itemsPerPage;\r\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\r\n  const currentItems = data.slice(indexOfFirstItem, indexOfLastItem);\r\n  const totalPages = Math.ceil(data.length / itemsPerPage);\r\n\r\n  return (\r\n    <Container>\r\n      <h2>Relatório de EBS Volumes</h2>\r\n      <TableWrapper>\r\n      <Table>\r\n        <Thead>\r\n          <Tr>\r\n            <Th>Account</Th>\r\n            <Th>Region</Th>\r\n            <Th>Volume ID</Th>\r\n            <Th>Size (GB)</Th>\r\n            <Th>State</Th>\r\n            <Th>Attached Instances</Th>\r\n          </Tr>\r\n        </Thead>\r\n        <tbody>\r\n          {currentItems.map((volume) => (\r\n            <Tr key={volume.VolumeID}>\r\n              <Td>{volume.Account}</Td>\r\n              <Td>{volume.Region}</Td>\r\n              <Td>{volume.VolumeID}</Td>\r\n              <Td>{volume.SizeGB}</Td>\r\n              <Td>{volume.State}</Td>\r\n              <Td>{volume.AttachedInstances.join(\", \") || \"N/A\"}</Td>\r\n            </Tr>\r\n          ))}\r\n        </tbody>\r\n      </Table>\r\n      </TableWrapper>\r\n      {totalPages > 1 && (\r\n      <PaginationContainer>\r\n        <PaginationButton \r\n          onClick={() => setCurrentPage((prev) => Math.max(prev - 1, 1))} \r\n          disabled={currentPage === 1}\r\n        >\r\n          Anterior\r\n        </PaginationButton>\r\n        <span>Página {currentPage} de {totalPages}</span>\r\n        <PaginationButton \r\n          onClick={() => setCurrentPage((prev) => Math.min(prev + 1, totalPages))} \r\n          disabled={currentPage === totalPages}\r\n        >\r\n          Próximo\r\n        </PaginationButton>\r\n      </PaginationContainer>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default RelatoryEBSVolumes;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  width: 98%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nexport const TableWrapper = styled.div`\r\n  width: 100%;\r\n  max-height: 500px;\r\n  overflow-y: auto;\r\n  overflow-x: auto;\r\n  border: 1px solid #ddd;\r\n  border-radius: 8px;\r\n  background-color: #ffffff; \r\n`;\r\n\r\nexport const Table = styled.table`\r\n  border-collapse: collapse;\r\n  width: 100%;\r\n`;\r\n\r\nexport const Th = styled.th`\r\n  border: 1px solid #ddd;\r\n  font-size: 12px;\r\n  padding: 12px;\r\n  text-align: left;\r\n  background-color: #f2f2f2;\r\n  position: sticky;\r\n  top: 0;\r\n  white-space: nowrap;\r\n  text-overflow: ellipsis;\r\n  z-index: 10; \r\n`;\r\n\r\nexport const Td = styled.td`\r\n  font-size: 12px;\r\n  text-align: left;\r\n  padding: 10px;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis; \r\n  border: 1px solid #ddd;\r\n`;\r\n\r\nexport const Thead = styled.thead`\r\n  color: black;\r\n`;\r\n\r\nexport const Tr = styled.tr`\r\n  &:hover {\r\n    background-color: #f5f5f5;\r\n  }\r\n`;\r\n\r\nexport const PaginationContainer = styled.div`\r\n  margin-top: 10px;\r\n  display: flex;\r\n  justify-content: center; \r\n  align-items: center;\r\n  gap: 10px;\r\n`;\r\n\r\nexport const PaginationButton = styled.button`\r\n  margin: 0 5px;\r\n  padding: 5px 10px;\r\n  border: none;\r\n  background-color:rgb(0, 0, 0);\r\n  color: white;\r\n  cursor: pointer;\r\n  border-radius: 5px;\r\n  transition: 0.3s ease-in-out;\r\n\r\n  &:hover {\r\n    background-color:rgb(0, 0, 0);\r\n  }\r\n\r\n  &:disabled {\r\n    background-color: #bbb;\r\n    cursor: not-allowed;\r\n  }\r\n`;\r\n"],"names":["_ref","data","currentPage","setCurrentPage","useState","indexOfLastItem","indexOfFirstItem","currentItems","slice","totalPages","Math","ceil","length","_jsxs","Container","children","_jsx","TableWrapper","Table","Thead","Tr","Th","map","volume","Td","Account","Region","VolumeID","SizeGB","State","AttachedInstances","join","PaginationContainer","PaginationButton","onClick","prev","max","disabled","min","styled","div","_templateObject","_taggedTemplateLiteral","_templateObject2","table","_templateObject3","th","_templateObject4","td","_templateObject5","thead","_templateObject6","tr","_templateObject7","_templateObject8","button","_templateObject9"],"sourceRoot":""}