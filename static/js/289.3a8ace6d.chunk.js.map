{"version":3,"file":"static/js/289.3a8ace6d.chunk.js","mappings":"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","sources":["pages/relatory/table/RelatoryEC2Instances.tsx","pages/relatory/table/TableStyles.ts"],"sourcesContent":["import React, {useState} from \"react\";\r\nimport { jsPDF } from \"jspdf\";\r\nimport autoTable from \"jspdf-autotable\";\r\nimport { saveAs } from \"file-saver\";\r\nimport * as XLSX from \"xlsx\";\r\nimport {\r\n  Container,\r\n  ContentTable,\r\n  Table,\r\n  Thead,\r\n  Tr,\r\n  PaginationContainer,\r\n  PaginationButton,\r\n  TableWrapper,\r\n  Th,\r\n  Td,\r\n  DescriptionBox,\r\n  ButtonSelectColumn,\r\n  Modal,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  CloseButton,\r\n  Checkbox,\r\n  FilterButton,\r\n  LabelBox,\r\n  ButtonDownload\r\n} from \"./TableStyles\";\r\n\r\ninterface EC2 {\r\n  Account: string;\r\n  Region: string;\r\n  InstanceID: string;\r\n  State: string;\r\n  InstanceType: string;\r\n  ImageID: string;\r\n  OperatingSystem: string;\r\n  Volumes: string[];\r\n  Tags: { Key: string; Value: string }[];\r\n}\r\n\r\nconst extractTagValue = (tags: { Key: string; Value: string }[], key: string) => {\r\n  const tag = tags.find(tag => tag.Key === key);\r\n  return tag ? tag.Value : \"N/A\";\r\n};\r\n\r\nconst RelatoryEC2Instances: React.FC<{ data: EC2[] }> = ({ data }) => {\r\n  const itemsPerPage = 15;\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [modalVisibleFilter, setModalVisibleFilter] = useState(false);\r\n  const [modalVisibleDownload, setModalVisibleDownload] = useState(false);\r\n  const [selectedColumns, setSelectedColumns] = useState({\r\n    Account: true,\r\n    Region: true,\r\n    InstanceID:true,\r\n    State: true,\r\n    InstanceType: true,\r\n    ImageID: true,\r\n    OperatingSystem: true,\r\n    Volumes: true,\r\n    Tags: true\r\n  });\r\n  const indexOfLastItem = currentPage * itemsPerPage;\r\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\r\n  const currentItems = data.slice(indexOfFirstItem, indexOfLastItem);\r\n  const totalPages = Math.ceil(data.length / itemsPerPage);\r\n  \r\n    const handleColumnToggle = (column: keyof EC2) => {\r\n      setSelectedColumns((prev) => ({\r\n        ...prev,\r\n        [column]: !prev[column],\r\n      }));\r\n    };\r\n  \r\n    const applyFilters = () => {\r\n      setModalVisibleFilter(false);\r\n    };\r\n  \r\n    const revertFilters = () => {\r\n      setSelectedColumns({\r\n        Account: true,\r\n        Region: true,\r\n        InstanceID:true,\r\n        State: true,\r\n        InstanceType: true,\r\n        ImageID: true,\r\n        OperatingSystem: true,\r\n        Volumes: true,\r\n        Tags: true\r\n      });\r\n      setModalVisibleFilter(false);\r\n    };\r\n  \r\n    // Função para exportar os dados para JSON\r\n    const exportToJSON = () => {\r\n      const blob = new Blob([JSON.stringify(data, null, 2)], { type: \"application/json\" });\r\n      saveAs(blob, \"relatorio_ec2.json\");\r\n    };\r\n  \r\n    // Função para exportar os dados para PDF\r\n    const exportToPDF = () => {\r\n      const doc = new jsPDF();\r\n      doc.text(\"Relatório de EC2\", 20, 20);\r\n    \r\n      const tableData = data.map((item) => [\r\n        item.Account,\r\n        item.Region,\r\n        item.InstanceID,\r\n        item.State,\r\n        item.InstanceType,\r\n        item.ImageID,\r\n        item.OperatingSystem,\r\n        item.Volumes\r\n      ]);\r\n    \r\n      // Chama autoTable corretamente\r\n      autoTable(doc, {\r\n        head: [[\"Account\", \"Region\", \"InstanceID\", \"State\",\"InstanceType\", \"ImageID\",\"OperatingSystem\", \"Volumes\"]],\r\n        body: tableData,\r\n      });\r\n    \r\n      doc.save(\"relatorio_ec2.pdf\");\r\n    };\r\n  \r\n    // Função para exportar os dados para Excel\r\n    const exportToExcel = () => {\r\n      const ws = XLSX.utils.json_to_sheet(data);\r\n      const wb = XLSX.utils.book_new();\r\n      XLSX.utils.book_append_sheet(wb, ws, \"EC2\");\r\n      XLSX.writeFile(wb, \"relatorio_ec2.xlsx\");\r\n    };\r\n\r\n  return (\r\n    <Container>\r\n      <ContentTable>\r\n        <DescriptionBox>\r\n          <LabelBox>\r\n          <h3>Relatório de EC2 Instances</h3>\r\n            <ButtonDownload type=\"button\" onClick={() => setModalVisibleDownload(true)}>\r\n              <img\r\n                src={`${process.env.PUBLIC_URL}/assets/Navbar/icon-download.png`}\r\n                style={{ width: 20, height: 20 }}\r\n                alt=\"baixar\"\r\n              />\r\n            </ButtonDownload>\r\n          </LabelBox>\r\n          <p>\r\n            Agrupar por colunas:\r\n            <ButtonSelectColumn type=\"button\" onClick={() => setModalVisibleFilter(true)}>\r\n              <img\r\n                src={`${process.env.PUBLIC_URL}/assets/Navbar/icon-filter.png`}\r\n                style={{ width: 15, height: 20 }}\r\n                alt=\"filtro\"\r\n              />\r\n            </ButtonSelectColumn>\r\n          </p>\r\n        </DescriptionBox>\r\n      <h3>Dados Gerais</h3>\r\n      <TableWrapper>\r\n      <div style={{ overflowX: 'auto', maxWidth: '100%' }}>\r\n        <Table>\r\n          <Thead>\r\n            <Tr>\r\n            {selectedColumns.Account && <Th>Account</Th>}\r\n            {selectedColumns.Region && <Th>Region</Th>}\r\n            {selectedColumns.InstanceID && <Th>Instance ID</Th>}\r\n            {selectedColumns.State && <Th>State</Th>}\r\n            {selectedColumns.InstanceType && <Th>Instance Type</Th>}\r\n            {selectedColumns.ImageID && <Th>Image ID</Th>}\r\n            {selectedColumns.OperatingSystem && <Th>Operating System</Th>}\r\n            {selectedColumns.Volumes && <Th>Volumes</Th>}\r\n            </Tr>\r\n          </Thead>\r\n          <tbody>\r\n            {currentItems.map(ec2 => (\r\n              <Tr key={ec2.InstanceID}>\r\n                {selectedColumns.Account && <Td>{ec2.Account}</Td>}\r\n                {selectedColumns.Region && <Td>{ec2.Region}</Td>}\r\n                {selectedColumns.InstanceID && <Td>{ec2.InstanceID}</Td>}\r\n                {selectedColumns.State && <Td>{ec2.State}</Td>}\r\n                {selectedColumns.InstanceType && <Td>{ec2.InstanceType}</Td>}\r\n                {selectedColumns.ImageID && <Td>{ec2.ImageID}</Td>}\r\n                {selectedColumns.OperatingSystem && <Td>{ec2.OperatingSystem}</Td>}\r\n                {selectedColumns.Volumes && <Td>{ec2.Volumes.join(\", \") || \"N/A\"}</Td>}\r\n              </Tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n        {totalPages > 1 && (\r\n          <PaginationContainer>\r\n            <PaginationButton\r\n              onClick={() => setCurrentPage((prev) => Math.max(prev - 1, 1))}\r\n              disabled={currentPage === 1}\r\n            >\r\n              <img\r\n                src={`${process.env.PUBLIC_URL}/assets/Navbar/icon-back.png`}\r\n                style={{ width: 15, height: 20 }}\r\n                alt=\"voltar\"\r\n              />\r\n            </PaginationButton>\r\n            <span>{currentPage}&nbsp;&nbsp;de&nbsp;&nbsp;{totalPages}</span>\r\n            <PaginationButton\r\n              onClick={() => setCurrentPage((prev) => Math.min(prev + 1, totalPages))}\r\n              disabled={currentPage === totalPages}\r\n            >\r\n              <img\r\n                src={`${process.env.PUBLIC_URL}/assets/Navbar/icon-back.png`}\r\n                style={{ width: 15, height: 20, transform: \"scaleX(-1)\" }}\r\n                alt=\"avançar\"\r\n              />\r\n            </PaginationButton>\r\n          </PaginationContainer>\r\n        )}\r\n      </div>\r\n      </TableWrapper>\r\n      </ContentTable>\r\n      <ContentTable>\r\n      {/* Segunda Tabela: Tags */}\r\n      <h3>Informações de Tags</h3>\r\n      <TableWrapper>\r\n        <div style={{ overflowX: 'auto', maxWidth: '100%' }}>\r\n        <Table>\r\n          <Thead>\r\n            <Tr>\r\n            {selectedColumns.Account && <Th>Account</Th>}\r\n              <Th>Name</Th>\r\n              <Th>swoMonitor</Th>\r\n              <Th>Billing-MagProd</Th>\r\n              <Th>swoRiskClass</Th>\r\n              <Th>map-migrated</Th>\r\n              <Th>swoBackup</Th>\r\n              <Th>swoPatch</Th>\r\n              <Th>Shutdown</Th>\r\n              <Th>aws:cloudformation:stack-name</Th>\r\n              <Th>aws:cloudformation:stack-id</Th>\r\n              <Th>aws:cloudformation:logical-id</Th>\r\n              <Th>AWSApplicationMigrationServiceManaged</Th>\r\n              <Th>aws:ec2launchtemplate:id</Th>\r\n              <Th>mgn.amazonaws.com-job</Th>\r\n              <Th>observacao</Th>\r\n            </Tr>\r\n          </Thead>\r\n          <tbody>\r\n            {currentItems.map(ec2 => (\r\n              <Tr key={ec2.InstanceID}>\r\n                {selectedColumns.Account && <Td>{ec2.Account}</Td>}\r\n                <Td>{extractTagValue(ec2.Tags, \"Name\")}</Td>\r\n                <Td>{extractTagValue(ec2.Tags, \"swoMonitor\")}</Td>\r\n                <Td>{extractTagValue(ec2.Tags, \"Billing-MagProd\")}</Td>\r\n                <Td>{extractTagValue(ec2.Tags, \"swoRiskClass\")}</Td>\r\n                <Td>{extractTagValue(ec2.Tags, \"map-migrated\")}</Td>\r\n                <Td>{extractTagValue(ec2.Tags, \"swoBackup\")}</Td>\r\n                <Td>{extractTagValue(ec2.Tags, \"swoPatch\")}</Td>\r\n                <Td>{extractTagValue(ec2.Tags, \"Shutdown\")}</Td>\r\n                <Td>{extractTagValue(ec2.Tags, \"aws:cloudformation:stack-name\")}</Td>\r\n                <Td>{extractTagValue(ec2.Tags, \"aws:cloudformation:stack-id\")}</Td>\r\n                <Td>{extractTagValue(ec2.Tags, \"aws:cloudformation:logical-id\")}</Td>\r\n                <Td>{extractTagValue(ec2.Tags, \"AWSApplicationMigrationServiceManaged\")}</Td>\r\n                <Td>{extractTagValue(ec2.Tags, \"aws:ec2launchtemplate:id\")}</Td>\r\n                <Td>{extractTagValue(ec2.Tags, \"mgn.amazonaws.com-job\")}</Td>\r\n                <Td>{extractTagValue(ec2.Tags, \"observacao\")}</Td>\r\n              </Tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n        {totalPages > 1 && (\r\n          <PaginationContainer>\r\n            <PaginationButton\r\n              onClick={() => setCurrentPage((prev) => Math.max(prev - 1, 1))}\r\n              disabled={currentPage === 1}\r\n            >\r\n              <img\r\n                src={`${process.env.PUBLIC_URL}/assets/Navbar/icon-back.png`}\r\n                style={{ width: 15, height: 20 }}\r\n                alt=\"voltar\"\r\n              />\r\n            </PaginationButton>\r\n            <span>{currentPage}&nbsp;&nbsp;de&nbsp;&nbsp;{totalPages}</span>\r\n            <PaginationButton\r\n              onClick={() => setCurrentPage((prev) => Math.min(prev + 1, totalPages))}\r\n              disabled={currentPage === totalPages}\r\n            >\r\n              <img\r\n                src={`${process.env.PUBLIC_URL}/assets/Navbar/icon-back.png`}\r\n                style={{ width: 15, height: 20, transform: \"scaleX(-1)\" }}\r\n                alt=\"avançar\"\r\n              />\r\n            </PaginationButton>\r\n          </PaginationContainer>\r\n        )}\r\n      </div>\r\n      </TableWrapper>\r\n      </ContentTable>\r\n      {/* Modal de Filtro */}\r\n      {modalVisibleFilter && (\r\n        <Modal onClick={() => setModalVisibleFilter(false)}>\r\n          <ModalContent onClick={(e) => e.stopPropagation()}>\r\n            <ModalHeader>\r\n              <h3>Seleção de Filtros</h3>\r\n              <CloseButton onClick={() => setModalVisibleFilter(false)}>×</CloseButton>\r\n            </ModalHeader>\r\n            <ModalBody>\r\n              {Object.keys(selectedColumns).map((column) => (\r\n                <div key={column}>\r\n                  <Checkbox\r\n                    type=\"checkbox\"\r\n                    checked={selectedColumns[column as keyof EC2]}\r\n                    onChange={() => handleColumnToggle(column as keyof EC2)}\r\n                  />\r\n                  <label>{column}</label>\r\n                </div>\r\n              ))}\r\n            </ModalBody>\r\n            <ModalFooter>\r\n              <FilterButton onClick={applyFilters}>Aplicar Filtros</FilterButton>\r\n              <FilterButton onClick={revertFilters}>Reverter Filtros</FilterButton>\r\n            </ModalFooter>\r\n          </ModalContent>\r\n        </Modal>\r\n      )}\r\n    {/* Modal de Download */}\r\n      {modalVisibleDownload && (\r\n        <Modal onClick={() => setModalVisibleDownload(false)}>\r\n          <ModalContent onClick={(e) => e.stopPropagation()}>\r\n            <ModalHeader>\r\n              <h3>Seleção de Formato</h3>\r\n              <CloseButton onClick={() => setModalVisibleDownload(false)}>×</CloseButton>\r\n            </ModalHeader>\r\n            <ModalBody>\r\n              <FilterButton onClick={exportToJSON}>Exportar como JSON</FilterButton>\r\n              <FilterButton onClick={exportToPDF}>Exportar como PDF</FilterButton>\r\n              <FilterButton onClick={exportToExcel}>Exportar como Excel</FilterButton>\r\n            </ModalBody>\r\n          </ModalContent>\r\n        </Modal>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default RelatoryEC2Instances;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  font-family: 'Poppins', sans-serif;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nexport const ContentTable = styled.div`\r\n  margin:20px;\r\n  border-radius: 16px;\r\n  box-shadow: 4px 4px 20px rgba(0, 0, 0, 0.1);\r\n  background-color: #ffffff;\r\n\r\n  overflow-y: auto;\r\n  scrollbar-width: thin;\r\n  scrollbar-color: #cccc #ffff;\r\n\r\n  @media (max-width: 1200px) {\r\n    width: 60%;\r\n  }\r\n  \r\n  @media (max-width: 770px) {\r\n    width: 40%;\r\n  }\r\n`\r\n\r\nexport const TableWrapper = styled.div`\r\n  overflow-y: auto;\r\n  scrollbar-width: thin;\r\n  scrollbar-color: #cccc #ffff;\r\n\r\n  ::-webkit-scrollbar-track {\r\n    background: #e0e0e0; /* Cor do fundo da barra */\r\n    border-radius: 16px;\r\n  }\r\n\r\n  ::-webkit-scrollbar-thumb {\r\n    background: #cccc; /* Cor do scroll */\r\n    border-radius: 16px;\r\n    border: 2px solid #ffffff; /* Dá um efeito \"separado\" */\r\n  }\r\n\r\n  ::-webkit-scrollbar-thumb:hover {\r\n    background: #888; /* Cor ao passar o mouse */\r\n  }\r\n  \r\n  \r\n`;\r\n\r\nexport const Table = styled.table`\r\n  margin:20px;\r\n  margin-left:40px;\r\n  margin-top:0px;\r\n  max-height:400px;\r\n  border: none;\r\n  border-collapse: collapse;\r\n  background-color: #ffffff;\r\n  overflow-x: auto; \r\n  overflow-y: auto;\r\n  scrollbar-width: thin;\r\n  scrollbar-color: #cccc #ffff;\r\n\r\n  ::-webkit-scrollbar-track {\r\n    background: #e0e0e0; /* Cor do fundo da barra */\r\n    border-radius: 16px;\r\n  }\r\n\r\n  ::-webkit-scrollbar-thumb {\r\n    background: #cccc; /* Cor do scroll */\r\n    border-radius: 16px;\r\n    border: 2px solid #ffffff; /* Dá um efeito \"separado\" */\r\n  }\r\n\r\n  ::-webkit-scrollbar-thumb:hover {\r\n    background: #888; /* Cor ao passar o mouse */\r\n  }\r\n`;\r\n\r\nexport const Th = styled.th`\r\n  background-color: #ffffff; \r\n  border: 1px solid #ddd;\r\n  color: #8392AB;\r\n  font-size: 12px;\r\n  padding: 12px;\r\n  text-align: left;\r\n  position: sticky;\r\n  top: 0;\r\n  white-space: nowrap;\r\n  text-overflow: ellipsis;\r\n  z-index: 10; \r\n  border-top: none;\r\n\r\n  &:first-child {\r\n    border-left: none;\r\n  }\r\n\r\n  &:last-child {\r\n    border-right: none;\r\n  }\r\n`;\r\n\r\nexport const Td = styled.td`\r\n  font-size: 12px;\r\n  text-align: left;\r\n  padding: 10px;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis; \r\n  border: 1px solid #ddd;\r\n  border-bottom: none;\r\n\r\n  &:first-child {\r\n    border-left: none;\r\n  }\r\n\r\n  &:last-child {\r\n    border-right: none;\r\n  }\r\n`;\r\n\r\nexport const Thead = styled.thead`\r\n  color: black;\r\n`;\r\n\r\nexport const Tr = styled.tr`\r\n  &:hover {\r\n    background-color: #f5f5f5;\r\n  }\r\n`;\r\n\r\nexport const PaginationContainer = styled.div`\r\n  margin-top: 10px;\r\n  display: flex;\r\n  justify-content: center; \r\n  align-items: center;\r\n  gap: 10px;\r\n  color:#bbbb;\r\n  padding-bottom:10px;\r\n`;\r\n\r\nexport const PaginationButton = styled.button`\r\n  background: none;\r\n  border: none;\r\n  cursor: pointer;\r\n  padding: 5px;\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  &:disabled {\r\n    cursor: not-allowed;\r\n    opacity: 0.5;\r\n  }\r\n`;\r\n\r\nexport const DescriptionBox = styled.div`\r\nmargin-top:20px;\r\nmargin-left:40px;\r\n`\r\n\r\nexport const ButtonSelectColumn = styled.button`\r\n  cursor: pointer;\r\n  padding-left: 5px;\r\n  background: none;\r\n  border: none;\r\n  align-items: center;\r\n\r\n  img {\r\n    width: 15px;\r\n    height: 15px;\r\n  }\r\n\r\n  &:disabled {\r\n    cursor: not-allowed;\r\n    opacity: 0.5;\r\n  }\r\n`;\r\n\r\nexport const Modal = styled.div`\r\n  z-index: 9999;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background: rgba(0, 0, 0, 0.5);\r\n`;\r\n\r\nexport const ModalContent = styled.div`\r\n  background: white;\r\n  padding: 20px;\r\n  border-radius: 10px;\r\n  width: 300px;\r\n`;\r\n\r\nexport const ModalHeader = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\n\r\nexport const ModalBody = styled.div`\r\n  margin-top: 10px;\r\n`;\r\n\r\nexport const ModalFooter = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-top: 20px;\r\n`;\r\n\r\nexport const CloseButton = styled.button`\r\n  background: none;\r\n  border: none;\r\n  font-size: 20px;\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const Checkbox = styled.input`\r\n  margin-right: 10px;\r\n`;\r\n\r\nexport const FilterButton = styled.button`\r\n  border: none;\r\n  cursor: pointer;\r\n  border-radius: 5px;\r\n  transition: 0.3s ease-in-out;\r\n  \r\n  &:hover {\r\n    filter: grayscale(100%);\r\n  }\r\n\r\n  &:disabled {\r\n    cursor: not-allowed;\r\n  }\r\n\r\n`;\r\n\r\nexport const LabelBox = styled.div`\r\n  display:flex;\r\n  white-space: nowrap;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n`\r\n\r\nexport const ButtonDownload = styled.button`\r\n  cursor: pointer;\r\n  padding-right: 20px;\r\n  background: none;\r\n  border: none;\r\n  align-items: center;\r\n\r\n  img {\r\n    width: 15px;\r\n    height: 15px;\r\n  }\r\n\r\n  &:disabled {\r\n    cursor: not-allowed;\r\n    opacity: 0.5;\r\n  }\r\n\r\n`"],"names":["extractTagValue","tags","key","tag","find","Key","Value","_ref","data","currentPage","setCurrentPage","useState","modalVisibleFilter","setModalVisibleFilter","modalVisibleDownload","setModalVisibleDownload","selectedColumns","setSelectedColumns","Account","Region","InstanceID","State","InstanceType","ImageID","OperatingSystem","Volumes","Tags","indexOfLastItem","indexOfFirstItem","currentItems","slice","totalPages","Math","ceil","length","_jsxs","Container","children","ContentTable","DescriptionBox","LabelBox","_jsx","ButtonDownload","type","onClick","src","concat","process","style","width","height","alt","ButtonSelectColumn","TableWrapper","overflowX","maxWidth","Table","Thead","Tr","Th","map","ec2","Td","join","PaginationContainer","PaginationButton","prev","max","disabled","min","transform","Modal","ModalContent","e","stopPropagation","ModalHeader","CloseButton","ModalBody","Object","keys","column","Checkbox","checked","onChange","_objectSpread","handleColumnToggle","ModalFooter","FilterButton","applyFilters","revertFilters","exportToJSON","blob","Blob","JSON","stringify","saveAs","exportToPDF","doc","jsPDF","text","tableData","item","autoTable","head","body","save","exportToExcel","ws","XLSX","json_to_sheet","wb","book_new","book_append_sheet","styled","div","_templateObject","_taggedTemplateLiteral","_templateObject2","_templateObject3","table","_templateObject4","th","_templateObject5","td","_templateObject6","thead","_templateObject7","tr","_templateObject8","_templateObject9","button","_templateObject10","_templateObject11","_templateObject12","_templateObject13","_templateObject14","_templateObject15","_templateObject16","_templateObject17","_templateObject18","input","_templateObject19","_templateObject20","_templateObject21","_templateObject22"],"sourceRoot":""}